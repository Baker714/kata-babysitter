{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitRepos\\\\kata-babysitter\\\\src\\\\components\\\\CalculatePayForm.js\";\nimport React, { Component } from 'react';\nimport './CalculatePayForm.css';\nimport TimePicker from 'react-time-picker'; //going with react-time-picker\n//import '../../node_modules/jquery-timepicker/jquery.timepicker.js';\n//import '../../node_modules/jquery-timepicker/jquery.timepicker.css';\n//tried various timepickers, couldnt' get jquery timepicker to work\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst timeArray = [\"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"00:00\", \"01:00\", \"02:00\", \"03:00\", \"04:00\"]; //creating timeArray list to properly calculate hours babysitting\n\nclass CalculatePayForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startTime: null,\n      bedTime: null,\n      endTime: null,\n      amountToCharge: '0'\n    };\n    this.calculatePay = this.calculatePay.bind(this);\n    this.startTimeRef = /*#__PURE__*/React.createRef(); //this.amountToCharge = React.createRef(); tried to create ref to update amountToCharge value, found better way with querySelector\n  }\n\n  changeStartTimeField(event) {\n    console.log(event);\n    this.setState({\n      startTime: event\n    }); //if(event < \"17:00\"){\n    //alert(\"Start Time must be after 5:00P.M.\");\n    // console.log(document.getElementById(\"startTimePicker\").value); logging\n    // console.log(document.querySelector(\"#startTimePicker\").value);\n    //this.refs.startTimePicker.value = \"\"; setting up the ref didn't quite work either\n    //this.setState({startTime: null});\n    //console.log(this.startTimeRef.value);\n    //this.startTimeRef.current.value = null;\n    //document.querySelector('startTimePicker').value = \"\"; tried to set value to empty, couldn't grab it this way\n    //}\n  }\n\n  changeBedTimeField(event) {\n    console.log(event);\n    this.setState({\n      bedTime: event\n    });\n  }\n\n  changeEndTimeField(event) {\n    console.log(event); // if(event > \"04:00\") //Removed validation here, no way to reset timepicker easily\n    //   alert(\"End Time must be before 4:00A.M.\");\n    // else\n\n    this.setState({\n      endTime: event\n    });\n  }\n\n  calculatePay(event) {\n    event.preventDefault();\n    let amountToCharge = 0;\n    let startTime = this.state.startTime;\n    let bedTime = this.state.bedTime;\n    let endTime = this.state.endTime;\n\n    if (this.validateTimes(startTime, bedTime, endTime)) {\n      amountToCharge += (bedTime - startTime) * 12;\n      amountToCharge += \"24:00\" - bedTime;\n      document.querySelector('#amountToCharge').innerText = amountToCharge;\n    }\n  }\n\n  validateTimes(startTime, bedTime, endTime) {\n    let alertMessage = \"\";\n    console.log(startTime);\n\n    if (startTime === null || bedTime === null || endTime === null) {\n      alertMessage += \"Please fill in all fields before submitting\\n\\n\";\n    }\n\n    console.log(timeArray.indexOf(startTime));\n\n    if (timeArray.indexOf(startTime) === -1 || timeArray.indexOf(startTime) > timeArray.indexOf(bedTime)) {\n      alertMessage += \"Start Time must be between 5:00P.M and Bed Time\\n\\n\";\n    }\n\n    if (timeArray.indexOf(bedTime) === -1 || timeArray.indexOf(bedTime) < timeArray.indexOf(startTime) && timeArray.indexOf(bedTime) > timeArray.indexOf(endTime)) {\n      alertMessage += \"Bed Time must be between Start Time and End Time\\n\\n\";\n    }\n\n    if (timeArray.indexOf(bedTime) === -1 || timeArray.indexOf(bedTime) >= timeArray.indexOf(\"00:00\")) {\n      alertMessage += \"Bed Time must be before Midnight\\n\\n\";\n    }\n\n    if (timeArray.indexOf(endTime) === -1 || timeArray.indexOf(endTime) < timeArray.indexOf(\"00:00\") && timeArray.indexOf(endTime) > timeArray.indexOf(\"04:00\")) {\n      alertMessage += \"End Time must be between Midnight and 4:00A.M\\n\\n\";\n    }\n\n    if (alertMessage !== \"\") {\n      alert(alertMessage);\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.calculatePay,\n        id: \"calcPayForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Start Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n          ref: this.startTimeRef,\n          disableClock: true,\n          value: this.state.startTime,\n          onChange: this.changeStartTimeField.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Bed Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n          id: \"bedTimePicker\",\n          disableClock: true,\n          value: this.state.bedTime,\n          onChange: this.changeBedTimeField.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"End Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n          id: \"endTimePicker\",\n          disableClock: true,\n          value: this.state.endTime,\n          onChange: this.changeEndTimeField.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Calculate Pay\",\n          id: \"calcPayButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"amountToCharge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CalculatePayForm;","map":{"version":3,"sources":["D:/GitRepos/kata-babysitter/src/components/CalculatePayForm.js"],"names":["React","Component","TimePicker","timeArray","CalculatePayForm","constructor","props","state","startTime","bedTime","endTime","amountToCharge","calculatePay","bind","startTimeRef","createRef","changeStartTimeField","event","console","log","setState","changeBedTimeField","changeEndTimeField","preventDefault","validateTimes","document","querySelector","innerText","alertMessage","indexOf","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './CalculatePayForm.css';\r\nimport TimePicker from 'react-time-picker'; //going with react-time-picker\r\n//import '../../node_modules/jquery-timepicker/jquery.timepicker.js';\r\n//import '../../node_modules/jquery-timepicker/jquery.timepicker.css';\r\n//tried various timepickers, couldnt' get jquery timepicker to work\r\n\r\nconst timeArray = [\"17:00\",\"18:00\",\"19:00\",\"20:00\",\"21:00\",\"22:00\",\"23:00\",\"00:00\",\"01:00\",\"02:00\",\"03:00\",\"04:00\"]; //creating timeArray list to properly calculate hours babysitting\r\n\r\nclass CalculatePayForm extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {startTime: null, bedTime: null, endTime: null, amountToCharge: '0'};\r\n    this.calculatePay = this.calculatePay.bind(this);\r\n    this.startTimeRef = React.createRef();\r\n    //this.amountToCharge = React.createRef(); tried to create ref to update amountToCharge value, found better way with querySelector\r\n  }\r\n\r\n  changeStartTimeField(event){\r\n    console.log(event);\r\n    this.setState({startTime: event});\r\n    //if(event < \"17:00\"){\r\n      //alert(\"Start Time must be after 5:00P.M.\");\r\n      // console.log(document.getElementById(\"startTimePicker\").value); logging\r\n      // console.log(document.querySelector(\"#startTimePicker\").value);\r\n      //this.refs.startTimePicker.value = \"\"; setting up the ref didn't quite work either\r\n      //this.setState({startTime: null});\r\n      //console.log(this.startTimeRef.value);\r\n      //this.startTimeRef.current.value = null;\r\n      //document.querySelector('startTimePicker').value = \"\"; tried to set value to empty, couldn't grab it this way\r\n    //}\r\n  }\r\n\r\n  changeBedTimeField(event){\r\n    console.log(event);\r\n    this.setState({bedTime: event});\r\n  }\r\n\r\n  changeEndTimeField(event){\r\n    console.log(event);\r\n    // if(event > \"04:00\") //Removed validation here, no way to reset timepicker easily\r\n    //   alert(\"End Time must be before 4:00A.M.\");\r\n    // else\r\n      this.setState({endTime: event});\r\n  }\r\n\r\n  calculatePay(event) {\r\n    event.preventDefault();\r\n    let amountToCharge = 0;\r\n    let startTime = this.state.startTime;\r\n    let bedTime = this.state.bedTime;\r\n    let endTime = this.state.endTime;\r\n\r\n    if(this.validateTimes(startTime, bedTime, endTime)){\r\n      amountToCharge += (bedTime-startTime)*12;\r\n      amountToCharge += (\"24:00\"-bedTime);\r\n      document.querySelector('#amountToCharge').innerText = amountToCharge;\r\n    }\r\n  }\r\n\r\n  validateTimes(startTime, bedTime, endTime) {\r\n\r\n    let alertMessage = \"\";\r\n    console.log(startTime);\r\n    if(startTime === null || bedTime === null || endTime === null){\r\n      alertMessage += \"Please fill in all fields before submitting\\n\\n\";\r\n    }\r\n    console.log(timeArray.indexOf(startTime));\r\n    if(timeArray.indexOf(startTime) === -1 || timeArray.indexOf(startTime) > timeArray.indexOf(bedTime)){\r\n      alertMessage += \"Start Time must be between 5:00P.M and Bed Time\\n\\n\";\r\n    }\r\n\r\n    if(timeArray.indexOf(bedTime) === -1 || (timeArray.indexOf(bedTime) < timeArray.indexOf(startTime) && timeArray.indexOf(bedTime) > timeArray.indexOf(endTime))){\r\n      alertMessage += \"Bed Time must be between Start Time and End Time\\n\\n\";\r\n    }\r\n\r\n    if(timeArray.indexOf(bedTime) === -1 || timeArray.indexOf(bedTime) >= timeArray.indexOf(\"00:00\")){\r\n      alertMessage += \"Bed Time must be before Midnight\\n\\n\";\r\n    }\r\n\r\n    if(timeArray.indexOf(endTime) === -1 || (timeArray.indexOf(endTime) < timeArray.indexOf(\"00:00\") && timeArray.indexOf(endTime) > timeArray.indexOf(\"04:00\"))){\r\n      alertMessage += \"End Time must be between Midnight and 4:00A.M\\n\\n\";\r\n    }\r\n\r\n    if(alertMessage !== \"\"){\r\n      alert(alertMessage);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.calculatePay} id=\"calcPayForm\">\r\n          <div>Start Time</div>\r\n          <TimePicker ref={this.startTimeRef} disableClock={true} value={this.state.startTime} onChange={this.changeStartTimeField.bind(this)}/>\r\n          <br/>\r\n          <br/>\r\n          <div>Bed Time</div>\r\n          <TimePicker id=\"bedTimePicker\" disableClock={true} value={this.state.bedTime} onChange={this.changeBedTimeField.bind(this)}/>\r\n          <br/>\r\n          <br/>\r\n          <div>End Time</div>\r\n          <TimePicker id=\"endTimePicker\" disableClock={true} value={this.state.endTime} onChange={this.changeEndTimeField.bind(this)}/>\r\n          <br/>\r\n          <br/>\r\n          <input type=\"submit\" value=\"Calculate Pay\" id=\"calcPayButton\"/>\r\n        </form>\r\n        <br/>\r\n        <div id=\"amountToCharge\"></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CalculatePayForm;\r\n"]},"metadata":{},"sourceType":"module"}